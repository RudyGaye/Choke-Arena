# Generated by Django 5.1 on 2024-08-19 05:07

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Techniques_Library', '0001_initial'),
        ('Training_Plans', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('level', models.CharField(choices=[('White Belt', 'White Belt'), ('Blue Belt', 'Blue Belt'), ('Purple Belt', 'Purple Belt'), ('Brown Belt', 'Brown Belt'), ('Black Belt', 'Black Belt')], max_length=50)),
                ('registration_date', models.DateField(auto_now_add=True)),
                ('birth_date', models.DateField()),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_redactor', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('library_plans', models.ManyToManyField(blank=True, related_name='user_library_plans', to='Training_Plans.trainingplan')),
                ('library_techniques', models.ManyToManyField(blank=True, related_name='user_library_techniques', to='Techniques_Library.technique')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
